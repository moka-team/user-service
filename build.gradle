buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'

    // querydsl
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.mokaform'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.4'
    implementation 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // swagger (SpringDoc)
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'

    // apache commons lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // jwt
    implementation 'com.auth0:java-jwt:4.1.0'

    // Spring Data Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Embedded Redis
    implementation('it.ozimov:embedded-redis:0.7.3') { exclude group: "org.slf4j", module: "slf4j-simple" }

    // Spring boot Starter Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.5'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

}

tasks.named('test') {
    useJUnitPlatform()
}


// querydsl
def querydslDir = "$buildDir/generated/querydsl" as Object

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
